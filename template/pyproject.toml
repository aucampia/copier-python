# https://python-poetry.org/docs/pyproject/
# https://www.python.org/dev/peps/pep-0621/
[tool.poetry]
name = "{{ project_name }}"
version = "{{ version }}"
description = ""
authors = []
license = "{{ sdpx_license_identifier }}"
readme = "README.md"
packages = [
    {include = "*", from = "src"},
]

[tool.poetry.scripts]
"{{ cli_name }}" = "{{ python_package_fqname }}.cli:main"


[tool.poetry.dependencies]
python = "^{{ python_version }}"
pydantic = "^1.10.4"
PyYAML = "^6.0"
# {% if variant in ["basic", "everything"] %}
structlog = "22.3.0"
typer = "0.7.0"
# {% endif %}

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
codespell = "^2.2.2"
flake8 = "^5.0.4"
flake8-bugbear = "^23.1.20"
flake8-isort = "^6.0.0"
flake8-bandit = "^4.1.1"
isort = "^5.0.0"
mypy = "^1.0.0"
pep8-naming = "^0.13.3"
pycln = "^2.1.3"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
types-PyYAML = "^6.0.12.5"
typing-extensions = "^4.4.0"
pip-audit = "^2.4.14"
# {% if build_tool == "poe" %}
poethepoet = "^0.18.1"
# {% endif %}

[tool.coverage.report]
# https://coverage.readthedocs.io/en/coverage-5.0/config.html
show_missing = true

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files.html
profile = "black"
src_paths = ["src", "tests"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["--cov-config=pyproject.toml", "--cov=src"]
# https://docs.pytest.org/en/stable/customize.html
# https://docs.pytest.org/en/stable/reference.html#configuration-options
log_format = "%(asctime)s %(process)d %(thread)d %(levelno)03d:%(levelname)-8s %(name)-12s %(module)s:%(lineno)s:%(funcName)s %(message)s"
log_date_format = "%Y-%m-%dT%H:%M:%S"
log_cli_format = "%(asctime)s %(process)d %(thread)d %(levelno)03d:%(levelname)-8s %(name)-12s %(module)s:%(lineno)s:%(funcName)s %(message)s"
log_cli_date_format = "%Y-%m-%dT%H:%M:%S"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
files = "src,tests"
mypy_path = "src"
python_version = "{{ python_version }}"
strict = true
warn_unreachable = true
warn_unused_configs = true
explicit_package_bases = true
namespace_packages = true

# {% if use_poetry_dynamic_versioning == "y" %}
# {% raw %}
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base=base, stage=stage, revision=revision) }}
    {%- else -%}
        {{ serialize_pep440(base=bump_version(base), stage=stage, revision=revision, dev=distance, metadata=[commit, "dirty"] if dirty else None ) | replace(".dev", "a") }}
    {%- endif -%}
"""
[tool.poetry-dynamic-versioning.substitution]
files=["src/**/_version.py"]
# {% endraw %}
# {% endif %}

[build-system]
# {% if use_poetry_dynamic_versioning == "y" %}
requires = ["setuptools","poetry-core>=1.0.0","poetry-dynamic-versioning"]
# {% else %}
requires = ["setuptools","poetry-core>=1.0.0"]
# {% endif %}
build-backend = "poetry.core.masonry.api"
