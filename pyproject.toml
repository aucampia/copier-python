[tool.poetry]
name = "aucampia.cookiecutter-python"
version = "0.0.0"
description = ""
license = "CC0-1.0"
readme = "README.md"
authors = []

[tool.poetry.dependencies]
python = "^3.10"
PyYAML = "^6.0"


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
codespell = "^2.2.2"
flake8 = "^5.0.0"
flake8-bugbear = "^23.1.20"
flake8-isort = "^6.0.0"
flake8-bandit = "^4.1.1"
isort = "^5.12.0"
mypy = "^1.0.0"
pep8-naming = "^0.13.3"
pycln = "^2.1.3"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
types-PyYAML = "^6.0.12.5"
typing-extensions = "^4.4.0"
pip-audit = "^2.4.14"
poetry = "^1.3.2"
frozendict = "^2.3.4"
types-frozendict = "^2.0.9"
copier = "^7.0.1"

[tool.coverage.report]
# https://coverage.readthedocs.io/en/coverage-5.0/config.html
show_missing = true

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files.html
profile = "black"
src_paths = ["template/_scripts", "tests"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/stable/customize.html
# https://docs.pytest.org/en/stable/reference.html#configuration-options
testpaths=[
    "tests"
]
addopts = [
    "--cov-config=pyproject.toml",
    "--capture=no",
    "--tb=native",
    "-ra",
]
log_format = "%(asctime)s %(process)d %(thread)d %(levelno)03d:%(levelname)-8s %(name)-12s %(module)s:%(lineno)s:%(funcName)s %(message)s"
log_date_format = "%Y-%m-%dT%H:%M:%S"
log_cli_format = "%(asctime)s %(process)d %(thread)d %(levelno)03d:%(levelname)-8s %(name)-12s %(module)s:%(lineno)s:%(funcName)s %(message)s"
log_cli_date_format = "%Y-%m-%dT%H:%M:%S"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
files = "tests,template/_scripts,template/pkg_files"
python_version = "3.10"
strict = true
warn_unreachable = true
warn_unused_configs = true
explicit_package_bases = true
namespace_packages = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest_cookies.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cookiecutter.*"
ignore_missing_imports = true

[tool.pycln]
# https://hadialqattan.github.io/pycln/#/?id=cli-options
# https://hadialqattan.github.io/pycln/#/?id=example
paths = ["tests", "template/_scripts", "template/pkg_files"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

